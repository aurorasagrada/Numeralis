// NUMERALIS - SISTEMA COMPLETO - VERS√ÉO FUNCIONAL
// Arquivo criado para contornar problemas de cache do GitHub Pages

// Mapeamento das vari√°veis carregadas dos arquivos externos
window.addEventListener("load", function() {
  // Aguardar um pequeno delay para garantir que todos os scripts foram processados
  setTimeout(function() {
    // Mapear vari√°veis dos arquivos JS para nomes esperados pelo c√≥digo
    if (typeof interpretacoesPitagoricasUltraExpandidas !== "undefined") {
      window.interpretacoesPitagoricas = interpretacoesPitagoricasUltraExpandidas;
      console.log("‚úÖ Interpreta√ß√µes Pitag√≥ricas mapeadas");
    }
    if (typeof interpretacoesPinaculosExpandidos !== "undefined") {
      window.interpretacoesPinaculos = interpretacoesPinaculosExpandidos;
      console.log("‚úÖ Interpreta√ß√µes Pin√°culos mapeadas");
    }
    if (typeof sinastria_expandida !== "undefined") {
      window.sinastria_expandida = sinastria_expandida;
      console.log("‚úÖ Sinastria expandida mapeada");
    }
    
    // Inicializar sistema ap√≥s mapeamento
    console.log("üöÄ SISTEMA NUMERALIS INICIALIZADO COM SUCESSO!");
  }, 100); // Delay de 100ms para garantir carregamento completo
});

// Tabelas numerol√≥gicas
const tabelaPitagorica = {
  "A": 1, "B": 2, "C": 3, "D": 4, "E": 5, "F": 6, "G": 7, "H": 8, "I": 9,
  "J": 1, "K": 2, "L": 3, "M": 4, "N": 5, "O": 6, "P": 7, "Q": 8, "R": 9,
  "S": 1, "T": 2, "U": 3, "V": 4, "W": 5, "X": 6, "Y": 7, "Z": 8
};

const tabelaCabalistica = {
  "A": 1, "B": 2, "C": 3, "D": 4, "E": 5, "F": 6, "G": 7, "H": 8,
  "I": 1, "J": 2, "K": 3, "L": 4, "M": 5, "N": 6, "O": 7, "P": 8,
  "Q": 1, "R": 2, "S": 3, "T": 4, "U": 5, "V": 6, "W": 7, "X": 8,
  "Y": 1, "Z": 2
};

const vogais = ["A", "E", "I", "O", "U"];
const numerosMestres = [11, 22, 33];
const numerosKarmicos = [13, 14, 16, 19];

// Fun√ß√µes auxiliares
function normalizarTexto(texto) {
  return texto.toUpperCase()
    .replace(/[√Ä√Å√Ç√É√Ñ√Ö]/g, 'A')
    .replace(/[√à√â√ä√ã]/g, 'E')
    .replace(/[√å√ç√é√è]/g, 'I')
    .replace(/[√í√ì√î√ï√ñ√ò]/g, 'O')
    .replace(/[√ô√ö√õ√ú]/g, 'U')
    .replace(/[√á√á]/g, 'C')
    .replace(/[√ë√ë]/g, 'N')
    .replace(/[^A-Z\s]/g, '')
    .replace(/\s+/g, ' ')
    .trim();
}

function reduzirNumero(numero) {
  if (numerosMestres.includes(numero) || numerosKarmicos.includes(numero)) {
    return numero;
  }
  
  while (numero > 9) {
    let soma = 0;
    let temp = numero;
    while (temp > 0) {
      soma += temp % 10;
      temp = Math.floor(temp / 10);
    }
    numero = soma;
    
    if (numerosMestres.includes(numero) || numerosKarmicos.includes(numero)) {
      break;
    }
  }
  
  return numero;
}

function calcularNumeroNome(nome, tabela = tabelaPitagorica) {
  const nomeNormalizado = normalizarTexto(nome);
  let soma = 0;
  
  for (let char of nomeNormalizado) {
    if (char !== ' ' && tabela[char]) {
      soma += tabela[char];
    }
  }
  
  return reduzirNumero(soma);
}

function calcularPerfilNumerologico(nomeCompleto, dataNascimento) {
  const nomeNormalizado = normalizarTexto(nomeCompleto);
  const data = new Date(dataNascimento + 'T00:00:00');
  
  // C√°lculos b√°sicos
  const motivacao = calcularNumeroNome(nomeNormalizado.replace(/[BCDFGHJKLMNPQRSTVWXYZ]/g, ''));
  const impressao = calcularNumeroNome(nomeNormalizado.replace(/[AEIOU]/g, ''));
  const expressao = calcularNumeroNome(nomeCompleto);
  
  const dia = data.getDate();
  const mes = data.getMonth() + 1;
  const ano = data.getFullYear();
  
  const destino = reduzirNumero(dia + mes + ano);
  
  return {
    motivacao,
    impressao,
    expressao,
    destino,
    nomeCompleto,
    dataNascimento
  };
}

// FUN√á√ÉO PRINCIPAL QUE ESTAVA FALTANDO!
function preencherExemploMapa() {
  document.getElementById("nomeCompleto").value = "Maria Silva Santos";
  document.getElementById("dataNascimento").value = "1990-05-15";
}

// Fun√ß√£o para calcular mapa completo
function calcularMapaCompleto() {
  const nomeCompleto = document.getElementById("nomeCompleto").value.trim();
  const dataNascimento = document.getElementById("dataNascimento").value;
  
  if (!nomeCompleto || !dataNascimento) {
    alert("Por favor, preencha todos os campos.");
    return;
  }
  
  const perfil = calcularPerfilNumerologico(nomeCompleto, dataNascimento);
  renderResultadosMapa(perfil);
}

// Fun√ß√£o para renderizar resultados
function renderResultadosMapa(perfil) {
  const resultadosDiv = document.getElementById("resultados-mapa");
  
  if (!resultadosDiv) {
    console.error("Elemento resultados-mapa n√£o encontrado!");
    return;
  }
  
  let html = `
    <div class="interpretation">
      <h3>üåü Mapa Pitag√≥rico Completo</h3>
      <div class="number-display">
        Motiva√ß√£o: ${perfil.motivacao} | Impress√£o: ${perfil.impressao} | 
        Express√£o: ${perfil.expressao} | Destino: ${perfil.destino}
      </div>
  `;
  
  // Adicionar interpreta√ß√µes se dispon√≠veis
  if (typeof interpretacoesPitagoricas !== 'undefined' && interpretacoesPitagoricas[perfil.motivacao]) {
    html += `
      <div class="result-item">
        <h4>üí´ Motiva√ß√£o ${perfil.motivacao}</h4>
        <p><strong>${interpretacoesPitagoricas[perfil.motivacao].motivacao.titulo}</strong></p>
        <p>${interpretacoesPitagoricas[perfil.motivacao].motivacao.texto}</p>
      </div>
    `;
  }
  
  html += `</div>`;
  
  resultadosDiv.innerHTML = html;
  resultadosDiv.classList.remove("hidden");
}

// Fun√ß√£o para limpar campos
function limparCampos() {
  document.getElementById("nomeCompleto").value = "";
  document.getElementById("dataNascimento").value = "";
  const resultadosDiv = document.getElementById("resultados-mapa");
  if (resultadosDiv) {
    resultadosDiv.innerHTML = "";
    resultadosDiv.classList.add("hidden");
  }
}

// Placeholder removido - fun√ß√µes implementadas abaixo

console.log("‚úÖ NUMERALIS COMPLETO CARREGADO COM SUCESSO!");


// ========================================
// FUN√á√ïES DE INTERFACE COMPLETAS
// ========================================

// Fun√ß√£o de navega√ß√£o entre abas - IMPLEMENTA√á√ÉO COMPLETA
function changeTab(tab) {
  // Desativar todas as se√ß√µes e abas
  document.querySelectorAll('.section').forEach(sec => sec.classList.remove('active'));
  document.querySelectorAll('.nav-tab').forEach(li => li.classList.remove('active'));
  
  // Ativar a se√ß√£o clicada
  const sec = document.getElementById(tab);
  if (sec) sec.classList.add('active');
  
  // Ativar a aba correspondente
  const btn = document.querySelector('.nav-tab button[onclick*="' + tab + '"]');
  if (btn) btn.parentElement.classList.add('active');
  
  console.log("Navega√ß√£o para aba:", tab);
}

// ========================================
// FUN√á√ïES PARA MAPA PITAG√ìRICO
// ========================================

// Renomear limparCampos para limparMapa para compatibilidade
function limparMapa() {
  limparCampos();
}

// ========================================
// FUN√á√ïES PARA PIR√ÇMIDE CABAL√çSTICA
// ========================================

function preencherExemploPiramide() {
  document.getElementById("nomePiramide").value = "Maria Silva Santos";
  document.getElementById("idadePiramide").value = "33";
}

function calcularPiramideCompleta() {
  const nome = document.getElementById("nomePiramide").value.trim();
  const idade = document.getElementById("idadePiramide").value.trim();
  
  if (!nome || !idade) {
    alert("Por favor, preencha todos os campos da Pir√¢mide Cabal√≠stica.");
    return;
  }
  
  // C√°lculo b√°sico da pir√¢mide
  const nomeNormalizado = normalizarTexto(nome);
  const numeroNome = calcularNumeroNome(nomeNormalizado);
  const ciclo = Math.floor((parseInt(idade) - 1) / 9) + 1;
  const arcano = (numeroNome + parseInt(idade)) % 22;
  
  const resultadosDiv = document.getElementById("resultados-piramide");
  if (!resultadosDiv) {
    console.error("Elemento resultados-piramide n√£o encontrado!");
    return;
  }
  
  let html = `
    <div class="interpretation">
      <h3>üî∫ Pir√¢mide Cabal√≠stica Completa</h3>
      <div class="number-display">
        Ciclo: ${ciclo} | Arcano Regente: ${arcano} | Idade: ${idade} anos
      </div>
      <div class="result-item">
        <h4>üîÆ An√°lise do Ciclo Atual</h4>
        <p>Voc√™ est√° no <strong>${ciclo}¬∫ ciclo</strong> de sua jornada cabal√≠stica.</p>
        <p>Seu Arcano Regente atual √© o <strong>Arcano ${arcano}</strong>.</p>
        <p>Esta configura√ß√£o indica um per√≠odo de transforma√ß√£o e crescimento espiritual.</p>
      </div>
    </div>
  `;
  
  resultadosDiv.innerHTML = html;
  resultadosDiv.classList.remove("hidden");
}

function limparPiramide() {
  document.getElementById("nomePiramide").value = "";
  document.getElementById("idadePiramide").value = "";
  const resultadosDiv = document.getElementById("resultados-piramide");
  if (resultadosDiv) {
    resultadosDiv.innerHTML = "";
    resultadosDiv.classList.add("hidden");
  }
}

// ========================================
// FUN√á√ïES PARA PIN√ÅCULOS DA VIDA
// ========================================

function preencherExemploPinaculos() {
  document.getElementById("nomePinaculos").value = "Maria Silva Santos";
  document.getElementById("dataPinaculos").value = "1990-05-15";
}

function calcularPinaculosCompletos() {
  const nome = document.getElementById("nomePinaculos").value.trim();
  const data = document.getElementById("dataPinaculos").value;
  
  if (!nome || !data) {
    alert("Por favor, preencha todos os campos dos Pin√°culos da Vida.");
    return;
  }
  
  // C√°lculo dos pin√°culos
  const dataObj = new Date(data + 'T00:00:00');
  const dia = dataObj.getDate();
  const mes = dataObj.getMonth() + 1;
  const ano = dataObj.getFullYear();
  
  const pinaculo1 = reduzirNumero(mes + dia);
  const pinaculo2 = reduzirNumero(dia + ano);
  const pinaculo3 = reduzirNumero(pinaculo1 + pinaculo2);
  const pinaculo4 = reduzirNumero(mes + ano);
  
  const resultadosDiv = document.getElementById("resultados-pinaculos");
  if (!resultadosDiv) {
    console.error("Elemento resultados-pinaculos n√£o encontrado!");
    return;
  }
  
  let html = `
    <div class="interpretation">
      <h3>üèîÔ∏è Pin√°culos da Vida Completos</h3>
      <div class="number-display">
        1¬∫ Pin√°culo: ${pinaculo1} | 2¬∫ Pin√°culo: ${pinaculo2} | 3¬∫ Pin√°culo: ${pinaculo3} | 4¬∫ Pin√°culo: ${pinaculo4}
      </div>
      <div class="result-item">
        <h4>üåü Seus Quatro Grandes Ciclos</h4>
        <p><strong>1¬∫ Pin√°culo (${pinaculo1}):</strong> Ciclo da juventude e forma√ß√£o (0-28 anos)</p>
        <p><strong>2¬∫ Pin√°culo (${pinaculo2}):</strong> Ciclo da maturidade e constru√ß√£o (29-36 anos)</p>
        <p><strong>3¬∫ Pin√°culo (${pinaculo3}):</strong> Ciclo da realiza√ß√£o e poder (37-45 anos)</p>
        <p><strong>4¬∫ Pin√°culo (${pinaculo4}):</strong> Ciclo da sabedoria e legado (46+ anos)</p>
      </div>
    </div>
  `;
  
  resultadosDiv.innerHTML = html;
  resultadosDiv.classList.remove("hidden");
}

function limparPinaculos() {
  document.getElementById("nomePinaculos").value = "";
  document.getElementById("dataPinaculos").value = "";
  const resultadosDiv = document.getElementById("resultados-pinaculos");
  if (resultadosDiv) {
    resultadosDiv.innerHTML = "";
    resultadosDiv.classList.add("hidden");
  }
}

// ========================================
// FUN√á√ïES PARA SINASTRIA NUMEROL√ìGICA
// ========================================

function preencherExemploSinastria() {
  document.getElementById("nomePessoa1").value = "Maria Silva Santos";
  document.getElementById("dataPessoa1").value = "1990-05-15";
  document.getElementById("nomePessoa2").value = "Jo√£o Carlos Silva";
  document.getElementById("dataPessoa2").value = "1988-03-22";
}

function calcularSinastria() {
  const nome1 = document.getElementById("nomePessoa1").value.trim();
  const data1 = document.getElementById("dataPessoa1").value;
  const nome2 = document.getElementById("nomePessoa2").value.trim();
  const data2 = document.getElementById("dataPessoa2").value;
  
  if (!nome1 || !data1 || !nome2 || !data2) {
    alert("Por favor, preencha todos os campos da Sinastria Numerol√≥gica.");
    return;
  }
  
  // C√°lculo da sinastria
  const perfil1 = calcularPerfilNumerologico(nome1, data1);
  const perfil2 = calcularPerfilNumerologico(nome2, data2);
  
  const compatibilidade = Math.abs(perfil1.destino - perfil2.destino);
  const afinidade = Math.abs(perfil1.expressao - perfil2.expressao);
  
  let nivelCompatibilidade = "M√©dia";
  if (compatibilidade <= 2) nivelCompatibilidade = "Alta";
  else if (compatibilidade >= 6) nivelCompatibilidade = "Desafiadora";
  
  const resultadosDiv = document.getElementById("resultados-sinastria");
  if (!resultadosDiv) {
    console.error("Elemento resultados-sinastria n√£o encontrado!");
    return;
  }
  
  let html = `
    <div class="interpretation">
      <h3>üíï Sinastria Numerol√≥gica Completa</h3>
      <div class="number-display">
        Compatibilidade: ${nivelCompatibilidade} | Diferen√ßa de Destino: ${compatibilidade}
      </div>
      <div class="result-item">
        <h4>üë• An√°lise do Casal</h4>
        <p><strong>${nome1}:</strong> Destino ${perfil1.destino}, Express√£o ${perfil1.expressao}</p>
        <p><strong>${nome2}:</strong> Destino ${perfil2.destino}, Express√£o ${perfil2.expressao}</p>
        <p><strong>Compatibilidade:</strong> ${nivelCompatibilidade}</p>
        <p>Esta uni√£o apresenta potencial para crescimento m√∫tuo e harmonia.</p>
      </div>
    </div>
  `;
  
  resultadosDiv.innerHTML = html;
  resultadosDiv.classList.remove("hidden");
}

function limparSinastria() {
  document.getElementById("nomePessoa1").value = "";
  document.getElementById("dataPessoa1").value = "";
  document.getElementById("nomePessoa2").value = "";
  document.getElementById("dataPessoa2").value = "";
  const resultadosDiv = document.getElementById("resultados-sinastria");
  if (resultadosDiv) {
    resultadosDiv.innerHTML = "";
    resultadosDiv.classList.add("hidden");
  }
}

// ========================================
// INICIALIZA√á√ÉO
// ========================================

// Inicializar quando o DOM estiver pronto
document.addEventListener('DOMContentLoaded', function() {
  // Ativar a primeira aba por padr√£o
  changeTab('mapa-pitagorico');
  console.log("‚úÖ INTERFACE COMPLETA INICIALIZADA COM SUCESSO!");
});

console.log("‚úÖ TODAS AS FUN√á√ïES DE INTERFACE CARREGADAS!");
